#ifndef TRIPLESERVER_H
#define TRIPLESERVER_H

// Qt stuff here...
#include <QTcpServer>
#include <QSettings>
#include <QStringList>
#include <QMap>

/**
 * @brief Service Container is a TCP server. It's use to interface
 * c++ class functionality over a network.
 */
class ServiceContainer : public QTcpServer
{
    // The instance to the server itself...
    static ServiceContainer* instance;

    // plugins...
    void loadPluginObjects();

    // The port
    quint16 port;

    // Object define by plugin...
    QMap<QString, QObject*> objects;

    Q_OBJECT
public:
    explicit ServiceContainer(QObject *parent = 0);
    void startServer();
    virtual ~ServiceContainer();

    /**
     * A singleton to the server
     **/
    static ServiceContainer *getInstance();

    /**
     * Set port.
     */
    void setPort(quint16 port);

    /**
     * Get an object with his typeName.
     **/
    QObject* getObjectByTypeName(QString typeName);

signals:

protected:
    void incomingConnection(qintptr socketDescriptor);

public Q_SLOTS:
    //////////////////////////////////////////////
    // Service Container api.
    /////////////////////////////////////////////

    /**
     * @brief Ping
     * @return
     */
    QString Ping();

    /**
     * @brief ExecuteJsFunction
     * That function is use to run JS script. It return a list of QObject.
     * @return A list of object generated by the script.
     */
    QVariantList ExecuteJsFunction(QVariantList);
};

#endif // TRIPLESERVER_H
